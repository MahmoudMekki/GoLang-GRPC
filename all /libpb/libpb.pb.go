// Code generated by protoc-gen-go. DO NOT EDIT.
// source: libpb/libpb.proto

package libpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	Number1              int32    `protobuf:"varint,1,opt,name=Number1,proto3" json:"Number1,omitempty"`
	Number2              int32    `protobuf:"varint,2,opt,name=Number2,proto3" json:"Number2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_725161990bee098b, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetNumber1() int32 {
	if m != nil {
		return m.Number1
	}
	return 0
}

func (m *SumRequest) GetNumber2() int32 {
	if m != nil {
		return m.Number2
	}
	return 0
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_725161990bee098b, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeRequest) Reset()         { *m = PrimeRequest{} }
func (m *PrimeRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeRequest) ProtoMessage()    {}
func (*PrimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_725161990bee098b, []int{2}
}

func (m *PrimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeRequest.Unmarshal(m, b)
}
func (m *PrimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeRequest.Marshal(b, m, deterministic)
}
func (m *PrimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeRequest.Merge(m, src)
}
func (m *PrimeRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeRequest.Size(m)
}
func (m *PrimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeRequest proto.InternalMessageInfo

func (m *PrimeRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeResponse struct {
	Prime                int32    `protobuf:"varint,1,opt,name=Prime,proto3" json:"Prime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeResponse) Reset()         { *m = PrimeResponse{} }
func (m *PrimeResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeResponse) ProtoMessage()    {}
func (*PrimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_725161990bee098b, []int{3}
}

func (m *PrimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeResponse.Unmarshal(m, b)
}
func (m *PrimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeResponse.Marshal(b, m, deterministic)
}
func (m *PrimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeResponse.Merge(m, src)
}
func (m *PrimeResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeResponse.Size(m)
}
func (m *PrimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeResponse proto.InternalMessageInfo

func (m *PrimeResponse) GetPrime() int32 {
	if m != nil {
		return m.Prime
	}
	return 0
}

type AVGRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AVGRequest) Reset()         { *m = AVGRequest{} }
func (m *AVGRequest) String() string { return proto.CompactTextString(m) }
func (*AVGRequest) ProtoMessage()    {}
func (*AVGRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_725161990bee098b, []int{4}
}

func (m *AVGRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AVGRequest.Unmarshal(m, b)
}
func (m *AVGRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AVGRequest.Marshal(b, m, deterministic)
}
func (m *AVGRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AVGRequest.Merge(m, src)
}
func (m *AVGRequest) XXX_Size() int {
	return xxx_messageInfo_AVGRequest.Size(m)
}
func (m *AVGRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AVGRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AVGRequest proto.InternalMessageInfo

func (m *AVGRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AVGResponse struct {
	Average              float32  `protobuf:"fixed32,1,opt,name=Average,proto3" json:"Average,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AVGResponse) Reset()         { *m = AVGResponse{} }
func (m *AVGResponse) String() string { return proto.CompactTextString(m) }
func (*AVGResponse) ProtoMessage()    {}
func (*AVGResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_725161990bee098b, []int{5}
}

func (m *AVGResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AVGResponse.Unmarshal(m, b)
}
func (m *AVGResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AVGResponse.Marshal(b, m, deterministic)
}
func (m *AVGResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AVGResponse.Merge(m, src)
}
func (m *AVGResponse) XXX_Size() int {
	return xxx_messageInfo_AVGResponse.Size(m)
}
func (m *AVGResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AVGResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AVGResponse proto.InternalMessageInfo

func (m *AVGResponse) GetAverage() float32 {
	if m != nil {
		return m.Average
	}
	return 0
}

type MaxRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxRequest) Reset()         { *m = MaxRequest{} }
func (m *MaxRequest) String() string { return proto.CompactTextString(m) }
func (*MaxRequest) ProtoMessage()    {}
func (*MaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_725161990bee098b, []int{6}
}

func (m *MaxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxRequest.Unmarshal(m, b)
}
func (m *MaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxRequest.Marshal(b, m, deterministic)
}
func (m *MaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxRequest.Merge(m, src)
}
func (m *MaxRequest) XXX_Size() int {
	return xxx_messageInfo_MaxRequest.Size(m)
}
func (m *MaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaxRequest proto.InternalMessageInfo

func (m *MaxRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type MaxResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxResponse) Reset()         { *m = MaxResponse{} }
func (m *MaxResponse) String() string { return proto.CompactTextString(m) }
func (*MaxResponse) ProtoMessage()    {}
func (*MaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_725161990bee098b, []int{7}
}

func (m *MaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxResponse.Unmarshal(m, b)
}
func (m *MaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxResponse.Marshal(b, m, deterministic)
}
func (m *MaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxResponse.Merge(m, src)
}
func (m *MaxResponse) XXX_Size() int {
	return xxx_messageInfo_MaxResponse.Size(m)
}
func (m *MaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaxResponse proto.InternalMessageInfo

func (m *MaxResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "libpb.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "libpb.SumResponse")
	proto.RegisterType((*PrimeRequest)(nil), "libpb.PrimeRequest")
	proto.RegisterType((*PrimeResponse)(nil), "libpb.PrimeResponse")
	proto.RegisterType((*AVGRequest)(nil), "libpb.AVGRequest")
	proto.RegisterType((*AVGResponse)(nil), "libpb.AVGResponse")
	proto.RegisterType((*MaxRequest)(nil), "libpb.MaxRequest")
	proto.RegisterType((*MaxResponse)(nil), "libpb.MaxResponse")
}

func init() { proto.RegisterFile("libpb/libpb.proto", fileDescriptor_725161990bee098b) }

var fileDescriptor_725161990bee098b = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xbb, 0x95, 0xa4, 0x30, 0xd1, 0x43, 0xc7, 0x52, 0x42, 0x4f, 0xb2, 0x58, 0xed, 0xa9,
	0xc6, 0x28, 0x78, 0x35, 0x5e, 0x3c, 0x55, 0x24, 0x82, 0x07, 0x6f, 0x49, 0xbb, 0x48, 0x21, 0x69,
	0xe2, 0x6e, 0x56, 0xfa, 0x75, 0xfd, 0x26, 0xd2, 0xfd, 0x97, 0xed, 0x45, 0x2f, 0x85, 0x37, 0xf3,
	0xe6, 0x37, 0x9d, 0x97, 0x85, 0x71, 0xb5, 0x2d, 0xdb, 0xf2, 0x46, 0xfd, 0x2e, 0x5b, 0xde, 0x74,
	0x0d, 0x06, 0x4a, 0xd0, 0x47, 0x80, 0x37, 0x59, 0xe7, 0xec, 0x4b, 0x32, 0xd1, 0x61, 0x0c, 0xa3,
	0x17, 0x59, 0x97, 0x8c, 0xdf, 0xc6, 0xe4, 0x82, 0x2c, 0x82, 0xdc, 0xca, 0xbe, 0x93, 0xc6, 0x43,
	0xbf, 0x93, 0xd2, 0x39, 0x44, 0x8a, 0x20, 0xda, 0x66, 0x27, 0x18, 0x4e, 0x21, 0xcc, 0x99, 0x90,
	0x55, 0x67, 0x08, 0x46, 0xd1, 0x2b, 0x38, 0x7d, 0xe5, 0xdb, 0x9a, 0xd9, 0x55, 0x53, 0x08, 0x35,
	0xc1, 0xfa, 0xb4, 0xa2, 0x73, 0x38, 0x33, 0x3e, 0x03, 0x9c, 0x40, 0xa0, 0x0a, 0xc6, 0xa7, 0x05,
	0xbd, 0x04, 0xc8, 0xde, 0x9f, 0x3d, 0xd8, 0xee, 0x08, 0xa6, 0x15, 0xbd, 0x86, 0x48, 0xb9, 0x0c,
	0x2a, 0x86, 0x51, 0xf6, 0xcd, 0x78, 0xf1, 0xa9, 0x61, 0xc3, 0xdc, 0xca, 0x03, 0x6e, 0x55, 0xec,
	0xff, 0xff, 0x6f, 0x91, 0x72, 0xfd, 0x7d, 0x6a, 0xfa, 0x43, 0x00, 0xd6, 0x45, 0xb5, 0x96, 0x55,
	0xd1, 0x35, 0x1c, 0x13, 0x08, 0xb2, 0xcd, 0x86, 0x71, 0x1c, 0x2f, 0xf5, 0x07, 0xe8, 0x03, 0x9f,
	0xa1, 0x5f, 0xd2, 0x58, 0x3a, 0xc0, 0x07, 0x08, 0xd5, 0x95, 0x02, 0xcf, 0x4d, 0xdf, 0x8f, 0x6e,
	0x36, 0x39, 0x2e, 0xda, 0xb1, 0x84, 0xe0, 0xbd, 0x3b, 0xd0, 0x2d, 0xeb, 0x53, 0x72, 0xcb, 0xbc,
	0x48, 0xe8, 0x60, 0x41, 0x30, 0x85, 0x93, 0x55, 0xb1, 0x77, 0x13, 0x7d, 0x10, 0x6e, 0xc2, 0xbb,
	0xfa, 0x30, 0x91, 0x90, 0xa7, 0xd1, 0x87, 0x7e, 0x40, 0x65, 0xa8, 0x9e, 0xd3, 0xdd, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7f, 0x05, 0x79, 0x5a, 0x63, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorClient is the client API for Calculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorClient interface {
	Adder(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Primes(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (Calculator_PrimesClient, error)
	Average(ctx context.Context, opts ...grpc.CallOption) (Calculator_AverageClient, error)
	Max(ctx context.Context, opts ...grpc.CallOption) (Calculator_MaxClient, error)
}

type calculatorClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorClient(cc *grpc.ClientConn) CalculatorClient {
	return &calculatorClient{cc}
}

func (c *calculatorClient) Adder(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/libpb.calculator/Adder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorClient) Primes(ctx context.Context, in *PrimeRequest, opts ...grpc.CallOption) (Calculator_PrimesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[0], "/libpb.calculator/Primes", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorPrimesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Calculator_PrimesClient interface {
	Recv() (*PrimeResponse, error)
	grpc.ClientStream
}

type calculatorPrimesClient struct {
	grpc.ClientStream
}

func (x *calculatorPrimesClient) Recv() (*PrimeResponse, error) {
	m := new(PrimeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorClient) Average(ctx context.Context, opts ...grpc.CallOption) (Calculator_AverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[1], "/libpb.calculator/Average", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorAverageClient{stream}
	return x, nil
}

type Calculator_AverageClient interface {
	Send(*AVGRequest) error
	CloseAndRecv() (*AVGResponse, error)
	grpc.ClientStream
}

type calculatorAverageClient struct {
	grpc.ClientStream
}

func (x *calculatorAverageClient) Send(m *AVGRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorAverageClient) CloseAndRecv() (*AVGResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AVGResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorClient) Max(ctx context.Context, opts ...grpc.CallOption) (Calculator_MaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Calculator_serviceDesc.Streams[2], "/libpb.calculator/Max", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorMaxClient{stream}
	return x, nil
}

type Calculator_MaxClient interface {
	Send(*MaxRequest) error
	Recv() (*MaxResponse, error)
	grpc.ClientStream
}

type calculatorMaxClient struct {
	grpc.ClientStream
}

func (x *calculatorMaxClient) Send(m *MaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorMaxClient) Recv() (*MaxResponse, error) {
	m := new(MaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServer is the server API for Calculator service.
type CalculatorServer interface {
	Adder(context.Context, *SumRequest) (*SumResponse, error)
	Primes(*PrimeRequest, Calculator_PrimesServer) error
	Average(Calculator_AverageServer) error
	Max(Calculator_MaxServer) error
}

// UnimplementedCalculatorServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServer struct {
}

func (*UnimplementedCalculatorServer) Adder(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Adder not implemented")
}
func (*UnimplementedCalculatorServer) Primes(req *PrimeRequest, srv Calculator_PrimesServer) error {
	return status.Errorf(codes.Unimplemented, "method Primes not implemented")
}
func (*UnimplementedCalculatorServer) Average(srv Calculator_AverageServer) error {
	return status.Errorf(codes.Unimplemented, "method Average not implemented")
}
func (*UnimplementedCalculatorServer) Max(srv Calculator_MaxServer) error {
	return status.Errorf(codes.Unimplemented, "method Max not implemented")
}

func RegisterCalculatorServer(s *grpc.Server, srv CalculatorServer) {
	s.RegisterService(&_Calculator_serviceDesc, srv)
}

func _Calculator_Adder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).Adder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/libpb.calculator/Adder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).Adder(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calculator_Primes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServer).Primes(m, &calculatorPrimesServer{stream})
}

type Calculator_PrimesServer interface {
	Send(*PrimeResponse) error
	grpc.ServerStream
}

type calculatorPrimesServer struct {
	grpc.ServerStream
}

func (x *calculatorPrimesServer) Send(m *PrimeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Calculator_Average_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServer).Average(&calculatorAverageServer{stream})
}

type Calculator_AverageServer interface {
	SendAndClose(*AVGResponse) error
	Recv() (*AVGRequest, error)
	grpc.ServerStream
}

type calculatorAverageServer struct {
	grpc.ServerStream
}

func (x *calculatorAverageServer) SendAndClose(m *AVGResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorAverageServer) Recv() (*AVGRequest, error) {
	m := new(AVGRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Calculator_Max_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServer).Max(&calculatorMaxServer{stream})
}

type Calculator_MaxServer interface {
	Send(*MaxResponse) error
	Recv() (*MaxRequest, error)
	grpc.ServerStream
}

type calculatorMaxServer struct {
	grpc.ServerStream
}

func (x *calculatorMaxServer) Send(m *MaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorMaxServer) Recv() (*MaxRequest, error) {
	m := new(MaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Calculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "libpb.calculator",
	HandlerType: (*CalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Adder",
			Handler:    _Calculator_Adder_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Primes",
			Handler:       _Calculator_Primes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Average",
			Handler:       _Calculator_Average_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Max",
			Handler:       _Calculator_Max_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "libpb/libpb.proto",
}
